// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/zero/zero.proto

package zero // import "github.com/empirefox/protoc-gen-dart-ext/pkg/zero"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
import any "github.com/golang/protobuf/ptypes/any"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Zero struct {
	// Types that are valid to be assigned to Type:
	//	*Zero_Float
	//	*Zero_Double
	//	*Zero_Int32
	//	*Zero_Int64
	//	*Zero_Uint32
	//	*Zero_Uint64
	//	*Zero_Sint32
	//	*Zero_Sint64
	//	*Zero_Fixed32
	//	*Zero_Fixed64
	//	*Zero_Sfixed32
	//	*Zero_Sfixed64
	//	*Zero_Bool
	//	*Zero_String_
	//	*Zero_Bytes
	//	*Zero_Enum
	//	*Zero_Message
	//	*Zero_Repeated
	//	*Zero_Map
	//	*Zero_Any
	//	*Zero_Duration
	//	*Zero_Timestamp
	Type                 isZero_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Zero) Reset()         { *m = Zero{} }
func (m *Zero) String() string { return proto.CompactTextString(m) }
func (*Zero) ProtoMessage()    {}
func (*Zero) Descriptor() ([]byte, []int) {
	return fileDescriptor_zero_f182b99dbc4537e7, []int{0}
}
func (m *Zero) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Zero.Unmarshal(m, b)
}
func (m *Zero) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Zero.Marshal(b, m, deterministic)
}
func (dst *Zero) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Zero.Merge(dst, src)
}
func (m *Zero) XXX_Size() int {
	return xxx_messageInfo_Zero.Size(m)
}
func (m *Zero) XXX_DiscardUnknown() {
	xxx_messageInfo_Zero.DiscardUnknown(m)
}

var xxx_messageInfo_Zero proto.InternalMessageInfo

type isZero_Type interface {
	isZero_Type()
}

type Zero_Float struct {
	Float float32 `protobuf:"fixed32,1,opt,name=float,proto3,oneof"`
}
type Zero_Double struct {
	Double float64 `protobuf:"fixed64,2,opt,name=double,proto3,oneof"`
}
type Zero_Int32 struct {
	Int32 int32 `protobuf:"varint,3,opt,name=int32,proto3,oneof"`
}
type Zero_Int64 struct {
	Int64 int64 `protobuf:"varint,4,opt,name=int64,proto3,oneof"`
}
type Zero_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,5,opt,name=uint32,proto3,oneof"`
}
type Zero_Uint64 struct {
	Uint64 uint64 `protobuf:"varint,6,opt,name=uint64,proto3,oneof"`
}
type Zero_Sint32 struct {
	Sint32 int32 `protobuf:"zigzag32,7,opt,name=sint32,proto3,oneof"`
}
type Zero_Sint64 struct {
	Sint64 int64 `protobuf:"zigzag64,8,opt,name=sint64,proto3,oneof"`
}
type Zero_Fixed32 struct {
	Fixed32 uint32 `protobuf:"fixed32,9,opt,name=fixed32,proto3,oneof"`
}
type Zero_Fixed64 struct {
	Fixed64 uint64 `protobuf:"fixed64,10,opt,name=fixed64,proto3,oneof"`
}
type Zero_Sfixed32 struct {
	Sfixed32 int32 `protobuf:"fixed32,11,opt,name=sfixed32,proto3,oneof"`
}
type Zero_Sfixed64 struct {
	Sfixed64 int64 `protobuf:"fixed64,12,opt,name=sfixed64,proto3,oneof"`
}
type Zero_Bool struct {
	Bool bool `protobuf:"varint,13,opt,name=bool,proto3,oneof"`
}
type Zero_String_ struct {
	String_ string `protobuf:"bytes,14,opt,name=string,proto3,oneof"`
}
type Zero_Bytes struct {
	Bytes []byte `protobuf:"bytes,15,opt,name=bytes,proto3,oneof"`
}
type Zero_Enum struct {
	Enum int32 `protobuf:"varint,16,opt,name=enum,proto3,oneof"`
}
type Zero_Message struct {
	Message bool `protobuf:"varint,17,opt,name=message,proto3,oneof"`
}
type Zero_Repeated struct {
	Repeated []byte `protobuf:"bytes,18,opt,name=repeated,proto3,oneof"`
}
type Zero_Map struct {
	Map []byte `protobuf:"bytes,19,opt,name=map,proto3,oneof"`
}
type Zero_Any struct {
	Any *any.Any `protobuf:"bytes,20,opt,name=any,proto3,oneof"`
}
type Zero_Duration struct {
	Duration *duration.Duration `protobuf:"bytes,21,opt,name=duration,proto3,oneof"`
}
type Zero_Timestamp struct {
	Timestamp *timestamp.Timestamp `protobuf:"bytes,22,opt,name=timestamp,proto3,oneof"`
}

func (*Zero_Float) isZero_Type()     {}
func (*Zero_Double) isZero_Type()    {}
func (*Zero_Int32) isZero_Type()     {}
func (*Zero_Int64) isZero_Type()     {}
func (*Zero_Uint32) isZero_Type()    {}
func (*Zero_Uint64) isZero_Type()    {}
func (*Zero_Sint32) isZero_Type()    {}
func (*Zero_Sint64) isZero_Type()    {}
func (*Zero_Fixed32) isZero_Type()   {}
func (*Zero_Fixed64) isZero_Type()   {}
func (*Zero_Sfixed32) isZero_Type()  {}
func (*Zero_Sfixed64) isZero_Type()  {}
func (*Zero_Bool) isZero_Type()      {}
func (*Zero_String_) isZero_Type()   {}
func (*Zero_Bytes) isZero_Type()     {}
func (*Zero_Enum) isZero_Type()      {}
func (*Zero_Message) isZero_Type()   {}
func (*Zero_Repeated) isZero_Type()  {}
func (*Zero_Map) isZero_Type()       {}
func (*Zero_Any) isZero_Type()       {}
func (*Zero_Duration) isZero_Type()  {}
func (*Zero_Timestamp) isZero_Type() {}

func (m *Zero) GetType() isZero_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Zero) GetFloat() float32 {
	if x, ok := m.GetType().(*Zero_Float); ok {
		return x.Float
	}
	return 0
}

func (m *Zero) GetDouble() float64 {
	if x, ok := m.GetType().(*Zero_Double); ok {
		return x.Double
	}
	return 0
}

func (m *Zero) GetInt32() int32 {
	if x, ok := m.GetType().(*Zero_Int32); ok {
		return x.Int32
	}
	return 0
}

func (m *Zero) GetInt64() int64 {
	if x, ok := m.GetType().(*Zero_Int64); ok {
		return x.Int64
	}
	return 0
}

func (m *Zero) GetUint32() uint32 {
	if x, ok := m.GetType().(*Zero_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (m *Zero) GetUint64() uint64 {
	if x, ok := m.GetType().(*Zero_Uint64); ok {
		return x.Uint64
	}
	return 0
}

func (m *Zero) GetSint32() int32 {
	if x, ok := m.GetType().(*Zero_Sint32); ok {
		return x.Sint32
	}
	return 0
}

func (m *Zero) GetSint64() int64 {
	if x, ok := m.GetType().(*Zero_Sint64); ok {
		return x.Sint64
	}
	return 0
}

func (m *Zero) GetFixed32() uint32 {
	if x, ok := m.GetType().(*Zero_Fixed32); ok {
		return x.Fixed32
	}
	return 0
}

func (m *Zero) GetFixed64() uint64 {
	if x, ok := m.GetType().(*Zero_Fixed64); ok {
		return x.Fixed64
	}
	return 0
}

func (m *Zero) GetSfixed32() int32 {
	if x, ok := m.GetType().(*Zero_Sfixed32); ok {
		return x.Sfixed32
	}
	return 0
}

func (m *Zero) GetSfixed64() int64 {
	if x, ok := m.GetType().(*Zero_Sfixed64); ok {
		return x.Sfixed64
	}
	return 0
}

func (m *Zero) GetBool() bool {
	if x, ok := m.GetType().(*Zero_Bool); ok {
		return x.Bool
	}
	return false
}

func (m *Zero) GetString_() string {
	if x, ok := m.GetType().(*Zero_String_); ok {
		return x.String_
	}
	return ""
}

func (m *Zero) GetBytes() []byte {
	if x, ok := m.GetType().(*Zero_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *Zero) GetEnum() int32 {
	if x, ok := m.GetType().(*Zero_Enum); ok {
		return x.Enum
	}
	return 0
}

func (m *Zero) GetMessage() bool {
	if x, ok := m.GetType().(*Zero_Message); ok {
		return x.Message
	}
	return false
}

func (m *Zero) GetRepeated() []byte {
	if x, ok := m.GetType().(*Zero_Repeated); ok {
		return x.Repeated
	}
	return nil
}

func (m *Zero) GetMap() []byte {
	if x, ok := m.GetType().(*Zero_Map); ok {
		return x.Map
	}
	return nil
}

func (m *Zero) GetAny() *any.Any {
	if x, ok := m.GetType().(*Zero_Any); ok {
		return x.Any
	}
	return nil
}

func (m *Zero) GetDuration() *duration.Duration {
	if x, ok := m.GetType().(*Zero_Duration); ok {
		return x.Duration
	}
	return nil
}

func (m *Zero) GetTimestamp() *timestamp.Timestamp {
	if x, ok := m.GetType().(*Zero_Timestamp); ok {
		return x.Timestamp
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Zero) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _Zero_OneofMarshaler, _Zero_OneofUnmarshaler, _Zero_OneofSizer, []interface{}{
		(*Zero_Float)(nil),
		(*Zero_Double)(nil),
		(*Zero_Int32)(nil),
		(*Zero_Int64)(nil),
		(*Zero_Uint32)(nil),
		(*Zero_Uint64)(nil),
		(*Zero_Sint32)(nil),
		(*Zero_Sint64)(nil),
		(*Zero_Fixed32)(nil),
		(*Zero_Fixed64)(nil),
		(*Zero_Sfixed32)(nil),
		(*Zero_Sfixed64)(nil),
		(*Zero_Bool)(nil),
		(*Zero_String_)(nil),
		(*Zero_Bytes)(nil),
		(*Zero_Enum)(nil),
		(*Zero_Message)(nil),
		(*Zero_Repeated)(nil),
		(*Zero_Map)(nil),
		(*Zero_Any)(nil),
		(*Zero_Duration)(nil),
		(*Zero_Timestamp)(nil),
	}
}

func _Zero_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*Zero)
	// type
	switch x := m.Type.(type) {
	case *Zero_Float:
		b.EncodeVarint(1<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(math.Float32bits(x.Float)))
	case *Zero_Double:
		b.EncodeVarint(2<<3 | proto.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.Double))
	case *Zero_Int32:
		b.EncodeVarint(3<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Int32))
	case *Zero_Int64:
		b.EncodeVarint(4<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Int64))
	case *Zero_Uint32:
		b.EncodeVarint(5<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Uint32))
	case *Zero_Uint64:
		b.EncodeVarint(6<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Uint64))
	case *Zero_Sint32:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeZigzag32(uint64(x.Sint32))
	case *Zero_Sint64:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeZigzag64(uint64(x.Sint64))
	case *Zero_Fixed32:
		b.EncodeVarint(9<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(x.Fixed32))
	case *Zero_Fixed64:
		b.EncodeVarint(10<<3 | proto.WireFixed64)
		b.EncodeFixed64(uint64(x.Fixed64))
	case *Zero_Sfixed32:
		b.EncodeVarint(11<<3 | proto.WireFixed32)
		b.EncodeFixed32(uint64(x.Sfixed32))
	case *Zero_Sfixed64:
		b.EncodeVarint(12<<3 | proto.WireFixed64)
		b.EncodeFixed64(uint64(x.Sfixed64))
	case *Zero_Bool:
		t := uint64(0)
		if x.Bool {
			t = 1
		}
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Zero_String_:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.String_)
	case *Zero_Bytes:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Bytes)
	case *Zero_Enum:
		b.EncodeVarint(16<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Enum))
	case *Zero_Message:
		t := uint64(0)
		if x.Message {
			t = 1
		}
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(t)
	case *Zero_Repeated:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Repeated)
	case *Zero_Map:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		b.EncodeRawBytes(x.Map)
	case *Zero_Any:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Any); err != nil {
			return err
		}
	case *Zero_Duration:
		b.EncodeVarint(21<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Duration); err != nil {
			return err
		}
	case *Zero_Timestamp:
		b.EncodeVarint(22<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Timestamp); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Zero.Type has unexpected type %T", x)
	}
	return nil
}

func _Zero_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*Zero)
	switch tag {
	case 1: // type.float
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Type = &Zero_Float{math.Float32frombits(uint32(x))}
		return true, err
	case 2: // type.double
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Type = &Zero_Double{math.Float64frombits(x)}
		return true, err
	case 3: // type.int32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Int32{int32(x)}
		return true, err
	case 4: // type.int64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Int64{int64(x)}
		return true, err
	case 5: // type.uint32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Uint32{uint32(x)}
		return true, err
	case 6: // type.uint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Uint64{x}
		return true, err
	case 7: // type.sint32
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag32()
		m.Type = &Zero_Sint32{int32(x)}
		return true, err
	case 8: // type.sint64
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag64()
		m.Type = &Zero_Sint64{int64(x)}
		return true, err
	case 9: // type.fixed32
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Type = &Zero_Fixed32{uint32(x)}
		return true, err
	case 10: // type.fixed64
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Type = &Zero_Fixed64{x}
		return true, err
	case 11: // type.sfixed32
		if wire != proto.WireFixed32 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed32()
		m.Type = &Zero_Sfixed32{int32(x)}
		return true, err
	case 12: // type.sfixed64
		if wire != proto.WireFixed64 {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.Type = &Zero_Sfixed64{int64(x)}
		return true, err
	case 13: // type.bool
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Bool{x != 0}
		return true, err
	case 14: // type.string
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Type = &Zero_String_{x}
		return true, err
	case 15: // type.bytes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Type = &Zero_Bytes{x}
		return true, err
	case 16: // type.enum
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Enum{int32(x)}
		return true, err
	case 17: // type.message
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.Type = &Zero_Message{x != 0}
		return true, err
	case 18: // type.repeated
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Type = &Zero_Repeated{x}
		return true, err
	case 19: // type.map
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeRawBytes(true)
		m.Type = &Zero_Map{x}
		return true, err
	case 20: // type.any
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(any.Any)
		err := b.DecodeMessage(msg)
		m.Type = &Zero_Any{msg}
		return true, err
	case 21: // type.duration
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(duration.Duration)
		err := b.DecodeMessage(msg)
		m.Type = &Zero_Duration{msg}
		return true, err
	case 22: // type.timestamp
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(timestamp.Timestamp)
		err := b.DecodeMessage(msg)
		m.Type = &Zero_Timestamp{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Zero_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*Zero)
	// type
	switch x := m.Type.(type) {
	case *Zero_Float:
		n += 1 // tag and wire
		n += 4
	case *Zero_Double:
		n += 1 // tag and wire
		n += 8
	case *Zero_Int32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Int32))
	case *Zero_Int64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Int64))
	case *Zero_Uint32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Uint32))
	case *Zero_Uint64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.Uint64))
	case *Zero_Sint32:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64((uint32(x.Sint32) << 1) ^ uint32((int32(x.Sint32) >> 31))))
	case *Zero_Sint64:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(uint64(x.Sint64<<1) ^ uint64((int64(x.Sint64) >> 63))))
	case *Zero_Fixed32:
		n += 1 // tag and wire
		n += 4
	case *Zero_Fixed64:
		n += 1 // tag and wire
		n += 8
	case *Zero_Sfixed32:
		n += 1 // tag and wire
		n += 4
	case *Zero_Sfixed64:
		n += 1 // tag and wire
		n += 8
	case *Zero_Bool:
		n += 1 // tag and wire
		n += 1
	case *Zero_String_:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.String_)))
		n += len(x.String_)
	case *Zero_Bytes:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Bytes)))
		n += len(x.Bytes)
	case *Zero_Enum:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.Enum))
	case *Zero_Message:
		n += 2 // tag and wire
		n += 1
	case *Zero_Repeated:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Repeated)))
		n += len(x.Repeated)
	case *Zero_Map:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.Map)))
		n += len(x.Map)
	case *Zero_Any:
		s := proto.Size(x.Any)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Zero_Duration:
		s := proto.Size(x.Duration)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *Zero_Timestamp:
		s := proto.Size(x.Timestamp)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

var E_Zero = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*Zero)(nil),
	Field:         919113,
	Name:          "pgde.zero.zero",
	Tag:           "bytes,919113,opt,name=zero",
	Filename:      "protos/zero/zero.proto",
}

func init() {
	proto.RegisterType((*Zero)(nil), "pgde.zero.Zero")
	proto.RegisterExtension(E_Zero)
}

func init() { proto.RegisterFile("protos/zero/zero.proto", fileDescriptor_zero_f182b99dbc4537e7) }

var fileDescriptor_zero_f182b99dbc4537e7 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x93, 0x4d, 0x6f, 0xd3, 0x30,
	0x18, 0xc7, 0xe9, 0x9a, 0xbe, 0x79, 0x1b, 0xdd, 0x4c, 0xa9, 0xbc, 0x8a, 0x97, 0x89, 0xd3, 0x2e,
	0x4d, 0xc4, 0x3a, 0x0d, 0xb4, 0x1b, 0xd3, 0x84, 0xb8, 0x21, 0x4d, 0x9c, 0x76, 0x4b, 0x9a, 0xa7,
	0x21, 0x22, 0x89, 0x2d, 0xdb, 0x91, 0x5a, 0x3e, 0x03, 0x77, 0x3e, 0x13, 0xdf, 0x8a, 0xc7, 0x6f,
	0xa9, 0xb4, 0x5e, 0x2a, 0x3d, 0xff, 0xdf, 0xff, 0xe7, 0x58, 0xae, 0x4d, 0xe6, 0x42, 0x72, 0xcd,
	0x55, 0xf2, 0x1b, 0x24, 0xb7, 0x3f, 0xb1, 0x0d, 0xe8, 0x44, 0x14, 0x39, 0xc4, 0x26, 0x58, 0x5c,
	0x16, 0x9c, 0x17, 0x15, 0x24, 0x16, 0x64, 0xed, 0x26, 0xc9, 0x41, 0xad, 0x65, 0x29, 0x34, 0x97,
	0xae, 0xbc, 0xb8, 0x78, 0xde, 0x48, 0x9b, 0x9d, 0x47, 0xef, 0x0e, 0xe4, 0x56, 0xa6, 0xba, 0xe4,
	0x8d, 0xe7, 0xef, 0x9f, 0x73, 0x5d, 0xd6, 0xa0, 0x74, 0x5a, 0x0b, 0x57, 0xf8, 0xf0, 0x77, 0x40,
	0xa2, 0x27, 0xdc, 0x06, 0x9d, 0x93, 0xc1, 0xa6, 0xe2, 0xa9, 0x66, 0xbd, 0xcb, 0xde, 0xd5, 0xd1,
	0xb7, 0x17, 0x8f, 0x6e, 0xa4, 0x8c, 0x0c, 0x73, 0xde, 0x66, 0x15, 0xb0, 0x23, 0x04, 0x3d, 0x04,
	0x7e, 0x36, 0x46, 0xd9, 0xe8, 0xd5, 0x35, 0xeb, 0x23, 0x18, 0x18, 0xc3, 0x8e, 0x3e, 0xbf, 0xbd,
	0x61, 0x11, 0xe6, 0x7d, 0x9f, 0xdf, 0xde, 0x98, 0x95, 0x5a, 0x27, 0x0c, 0x10, 0x9c, 0x9a, 0x95,
	0xdc, 0x1c, 0x08, 0x2a, 0x43, 0x24, 0x51, 0x20, 0xce, 0x51, 0xce, 0x19, 0x21, 0x39, 0x37, 0x44,
	0x75, 0x8e, 0x72, 0xce, 0x18, 0x09, 0x0d, 0x04, 0x9d, 0x05, 0x19, 0x6d, 0xca, 0x2d, 0xe4, 0x28,
	0x4d, 0x10, 0x8d, 0x10, 0x85, 0xa0, 0x63, 0xa8, 0x11, 0x64, 0xc3, 0x8e, 0xa1, 0xf7, 0x86, 0x8c,
	0x55, 0x10, 0x8f, 0x11, 0x4e, 0x11, 0x76, 0xc9, 0x9e, 0xa2, 0x7a, 0x82, 0xf4, 0x6c, 0x4f, 0xd1,
	0x9d, 0x91, 0x28, 0xe3, 0xbc, 0x62, 0xa7, 0x48, 0xc6, 0x48, 0xec, 0x64, 0xf7, 0xa8, 0x65, 0xd9,
	0x14, 0xec, 0x25, 0xe6, 0x13, 0xbb, 0x47, 0x3b, 0x9b, 0x33, 0xca, 0x76, 0x1a, 0x14, 0x9b, 0x22,
	0x38, 0x31, 0x67, 0x64, 0x47, 0xb3, 0x0e, 0x34, 0x6d, 0xcd, 0xce, 0xfc, 0x91, 0xda, 0xc9, 0xec,
	0x1a, 0xff, 0x35, 0x95, 0x16, 0xc0, 0xce, 0xfd, 0x07, 0x42, 0x60, 0xf6, 0x25, 0x41, 0x40, 0xaa,
	0x21, 0x67, 0xd4, 0x2f, 0xd6, 0x25, 0x94, 0x92, 0x7e, 0x9d, 0x0a, 0xf6, 0xca, 0x03, 0x33, 0xd0,
	0x2b, 0xd2, 0xc7, 0x0b, 0xc4, 0x66, 0x98, 0x1d, 0x5f, 0xcf, 0x62, 0x77, 0x43, 0xe2, 0x70, 0x43,
	0xe2, 0x2f, 0xcd, 0xce, 0x34, 0xb1, 0x42, 0x3f, 0x91, 0x71, 0xb8, 0x4f, 0xec, 0xb5, 0xad, 0x5f,
	0x1c, 0xd4, 0x1f, 0x7c, 0xc1, 0x7c, 0x36, 0x94, 0xe9, 0x1d, 0x99, 0x74, 0x17, 0x8d, 0xcd, 0xad,
	0xb9, 0x38, 0x30, 0x7f, 0x84, 0x06, 0xaa, 0xfb, 0xfa, 0xfd, 0x90, 0x44, 0x7a, 0x27, 0xe0, 0xee,
	0x81, 0x44, 0xe6, 0x7d, 0xd0, 0xb7, 0x07, 0xe2, 0xd7, 0x12, 0xaa, 0xfc, 0xbb, 0x30, 0x5f, 0x52,
	0xec, 0xdf, 0x9f, 0xcf, 0x76, 0xfd, 0x69, 0xdc, 0x3d, 0xa9, 0xd8, 0x5c, 0xe8, 0x47, 0x6b, 0xdf,
	0xaf, 0x9e, 0x3e, 0x16, 0xa5, 0xfe, 0xd9, 0x66, 0xf1, 0x9a, 0xd7, 0x09, 0xd4, 0xa2, 0x94, 0xb0,
	0xe1, 0x5b, 0xf7, 0x20, 0xd6, 0xcb, 0x02, 0x9a, 0x65, 0x9e, 0x4a, 0xbd, 0x84, 0xad, 0x4e, 0xc4,
	0xaf, 0xc2, 0xbe, 0xd1, 0x6c, 0x68, 0xe9, 0xea, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4d, 0x65,
	0x9a, 0x73, 0xbe, 0x03, 0x00, 0x00,
}
