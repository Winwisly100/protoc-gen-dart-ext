// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/units/atom.proto

package units // import "github.com/empirefox/protoc-gen-dart-ext/pkg/units"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/empirefox/protoc-gen-dart-ext/pkg/l10n"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Part of:
// https://physics.nist.gov/cuu/Units/units.html
// https://physics.nist.gov/cuu/Units/outside.html
type AtomV1 int32

const (
	AtomV1_noAtom AtomV1 = 0
	// m
	AtomV1_meter AtomV1 = 1
	// ft
	AtomV1_foot AtomV1 = 2
	// in
	AtomV1_inch AtomV1 = 3
	// yd
	AtomV1_yard AtomV1 = 4
	// mi
	AtomV1_mile AtomV1 = 5
	// NM
	AtomV1_nauticalMile AtomV1 = 6
	// LY
	AtomV1_lightYear AtomV1 = 7
	// ha
	AtomV1_hectare AtomV1 = 8
	// a
	AtomV1_are AtomV1 = 9
	// L
	AtomV1_liter AtomV1 = 10
	// gal
	AtomV1_gallon AtomV1 = 11
	// bbl
	AtomV1_barrel AtomV1 = 12
	// g
	AtomV1_gram AtomV1 = 13
	// t
	AtomV1_ton AtomV1 = 14
	// lbs
	AtomV1_pound AtomV1 = 15
	// oz
	AtomV1_ounce AtomV1 = 16
	// s
	AtomV1_second AtomV1 = 17
	// min
	AtomV1_minute AtomV1 = 18
	// h
	AtomV1_hour AtomV1 = 19
	// d
	AtomV1_day AtomV1 = 20
	// week
	AtomV1_week AtomV1 = 21
	// month
	AtomV1_month AtomV1 = 22
	// yr
	AtomV1_year AtomV1 = 23
	// century
	AtomV1_century AtomV1 = 24
	// ''
	AtomV1_secondAngle AtomV1 = 25
	// '
	AtomV1_minuteAngle AtomV1 = 26
	// °
	AtomV1_degree AtomV1 = 27
	// A
	AtomV1_ampere AtomV1 = 28
	// eV
	AtomV1_electronvolt AtomV1 = 29
	// B
	AtomV1_bel AtomV1 = 30
	// K
	AtomV1_kelvin AtomV1 = 31
	// mol
	AtomV1_mole AtomV1 = 32
	// cd
	AtomV1_candela AtomV1 = 33
	// %
	AtomV1_percent AtomV1 = 34
	// ‰
	AtomV1_perThousand AtomV1 = 35
	// b
	AtomV1_bit AtomV1 = 36
	// B
	AtomV1_byte AtomV1 = 37
	// character
	AtomV1_character AtomV1 = 38
	// word
	AtomV1_word AtomV1 = 39
	// rad
	AtomV1_radian AtomV1 = 40
	// sr
	AtomV1_steradian AtomV1 = 41
	// Hz
	AtomV1_hertz AtomV1 = 42
	// N
	AtomV1_newton AtomV1 = 43
	// Pa
	AtomV1_pascal AtomV1 = 44
	// J
	AtomV1_joule AtomV1 = 45
	// W
	AtomV1_watt AtomV1 = 46
	// C
	AtomV1_coulomb AtomV1 = 47
	// V
	AtomV1_volt AtomV1 = 48
	// F
	AtomV1_farad AtomV1 = 49
	// Ω
	AtomV1_ohm AtomV1 = 50
	// S
	AtomV1_siemens AtomV1 = 51
	// Wb
	AtomV1_weber AtomV1 = 52
	// T
	AtomV1_tesla AtomV1 = 53
	// H
	AtomV1_henry AtomV1 = 54
	// °C
	AtomV1_degreeCelsius AtomV1 = 55
	// lm
	AtomV1_lumen AtomV1 = 56
	// lx
	AtomV1_lux AtomV1 = 57
	// Bq
	AtomV1_becquerel AtomV1 = 58
	// Gy
	AtomV1_gray AtomV1 = 59
	// Sv
	AtomV1_sievert AtomV1 = 60
	// kat
	AtomV1_katal AtomV1 = 61
)

var AtomV1_name = map[int32]string{
	0:  "noAtom",
	1:  "meter",
	2:  "foot",
	3:  "inch",
	4:  "yard",
	5:  "mile",
	6:  "nauticalMile",
	7:  "lightYear",
	8:  "hectare",
	9:  "are",
	10: "liter",
	11: "gallon",
	12: "barrel",
	13: "gram",
	14: "ton",
	15: "pound",
	16: "ounce",
	17: "second",
	18: "minute",
	19: "hour",
	20: "day",
	21: "week",
	22: "month",
	23: "year",
	24: "century",
	25: "secondAngle",
	26: "minuteAngle",
	27: "degree",
	28: "ampere",
	29: "electronvolt",
	30: "bel",
	31: "kelvin",
	32: "mole",
	33: "candela",
	34: "percent",
	35: "perThousand",
	36: "bit",
	37: "byte",
	38: "character",
	39: "word",
	40: "radian",
	41: "steradian",
	42: "hertz",
	43: "newton",
	44: "pascal",
	45: "joule",
	46: "watt",
	47: "coulomb",
	48: "volt",
	49: "farad",
	50: "ohm",
	51: "siemens",
	52: "weber",
	53: "tesla",
	54: "henry",
	55: "degreeCelsius",
	56: "lumen",
	57: "lux",
	58: "becquerel",
	59: "gray",
	60: "sievert",
	61: "katal",
}
var AtomV1_value = map[string]int32{
	"noAtom":        0,
	"meter":         1,
	"foot":          2,
	"inch":          3,
	"yard":          4,
	"mile":          5,
	"nauticalMile":  6,
	"lightYear":     7,
	"hectare":       8,
	"are":           9,
	"liter":         10,
	"gallon":        11,
	"barrel":        12,
	"gram":          13,
	"ton":           14,
	"pound":         15,
	"ounce":         16,
	"second":        17,
	"minute":        18,
	"hour":          19,
	"day":           20,
	"week":          21,
	"month":         22,
	"year":          23,
	"century":       24,
	"secondAngle":   25,
	"minuteAngle":   26,
	"degree":        27,
	"ampere":        28,
	"electronvolt":  29,
	"bel":           30,
	"kelvin":        31,
	"mole":          32,
	"candela":       33,
	"percent":       34,
	"perThousand":   35,
	"bit":           36,
	"byte":          37,
	"character":     38,
	"word":          39,
	"radian":        40,
	"steradian":     41,
	"hertz":         42,
	"newton":        43,
	"pascal":        44,
	"joule":         45,
	"watt":          46,
	"coulomb":       47,
	"volt":          48,
	"farad":         49,
	"ohm":           50,
	"siemens":       51,
	"weber":         52,
	"tesla":         53,
	"henry":         54,
	"degreeCelsius": 55,
	"lumen":         56,
	"lux":           57,
	"becquerel":     58,
	"gray":          59,
	"sievert":       60,
	"katal":         61,
}

func (x AtomV1) String() string {
	return proto.EnumName(AtomV1_name, int32(x))
}
func (AtomV1) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_atom_27d2f0afd4b22be8, []int{0}
}

func init() {
	proto.RegisterEnum("pgde.units.AtomV1", AtomV1_name, AtomV1_value)
}

func init() { proto.RegisterFile("protos/units/atom.proto", fileDescriptor_atom_27d2f0afd4b22be8) }

var fileDescriptor_atom_27d2f0afd4b22be8 = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x2c, 0x53, 0xd9, 0x76, 0xd3, 0x30,
	0x10, 0xa5, 0x5b, 0xd2, 0xaa, 0x2d, 0x9d, 0x1a, 0x68, 0xa1, 0xec, 0x3b, 0x14, 0x12, 0x77, 0x63,
	0x87, 0x87, 0xc2, 0x33, 0x6f, 0x1c, 0xce, 0x81, 0x37, 0xd9, 0x9e, 0xd8, 0x22, 0xb2, 0x64, 0x64,
	0x29, 0x0b, 0x9f, 0xc5, 0x17, 0xf0, 0x31, 0x7c, 0x00, 0x9f, 0xc0, 0x8c, 0x9c, 0x97, 0x9c, 0xab,
	0xd1, 0x9d, 0x3b, 0xf7, 0x4e, 0x64, 0xb1, 0xdf, 0x38, 0xeb, 0x6d, 0x9b, 0x06, 0xa3, 0x7c, 0x9b,
	0x4a, 0x6f, 0xeb, 0x61, 0xac, 0x24, 0xa2, 0x29, 0x0b, 0x1c, 0xc6, 0xf2, 0xc1, 0xde, 0x82, 0xa4,
	0x8f, 0x8f, 0x4c, 0xfc, 0xe9, 0x38, 0x87, 0xff, 0xd6, 0x44, 0xef, 0x9c, 0x5a, 0xbe, 0x1e, 0x27,
	0x42, 0xf4, 0x8c, 0x65, 0x0c, 0x17, 0x92, 0x0d, 0xb1, 0x56, 0xa3, 0x47, 0x07, 0x4b, 0xc9, 0xba,
	0x58, 0x1d, 0x59, 0xeb, 0x61, 0x99, 0x91, 0x32, 0x79, 0x05, 0x2b, 0x8c, 0xe6, 0xd2, 0x15, 0xb0,
	0xca, 0xa8, 0x56, 0x1a, 0x61, 0x2d, 0x01, 0xb1, 0x65, 0x64, 0xf0, 0x2a, 0x97, 0xfa, 0x33, 0x57,
	0x7a, 0xc9, 0xb6, 0xd8, 0xd0, 0xaa, 0xac, 0xfc, 0x37, 0x94, 0x0e, 0xfa, 0xc9, 0xa6, 0xe8, 0x57,
	0x98, 0x7b, 0xe9, 0x10, 0xd6, 0x93, 0xbe, 0x58, 0x61, 0xb0, 0xc1, 0x93, 0xb4, 0xe2, 0x49, 0x82,
	0x0d, 0x94, 0x52, 0x6b, 0x6b, 0x60, 0x93, 0x71, 0x26, 0x9d, 0x43, 0x0d, 0x5b, 0x3c, 0xa3, 0x74,
	0xb2, 0x86, 0x6d, 0xee, 0xf2, 0x74, 0x7d, 0x91, 0xbb, 0x1a, 0x1b, 0x4c, 0x01, 0x3b, 0x0c, 0x09,
	0xe5, 0x08, 0xc0, 0x4d, 0x2d, 0xe6, 0x96, 0xca, 0xbb, 0x8c, 0x6b, 0x65, 0x82, 0x47, 0x48, 0x58,
	0xa0, 0xb2, 0xc1, 0xc1, 0x25, 0x16, 0x28, 0xe4, 0x1c, 0x2e, 0x73, 0x69, 0x8a, 0x38, 0x86, 0x2b,
	0x31, 0xaa, 0x35, 0xbe, 0x82, 0xbd, 0x18, 0x8b, 0xbd, 0xee, 0xb3, 0xd7, 0x1c, 0x8d, 0x0f, 0x6e,
	0x0e, 0x57, 0x93, 0x1d, 0xb1, 0xd9, 0xc9, 0x9e, 0x9b, 0x92, 0x82, 0x5d, 0xe3, 0x42, 0xa7, 0xdd,
	0x15, 0x0e, 0x78, 0x58, 0x81, 0xa5, 0x43, 0x84, 0xeb, 0x8c, 0x65, 0xdd, 0x20, 0x85, 0xbb, 0xc1,
	0x3b, 0x41, 0x4d, 0x99, 0x9d, 0x35, 0x13, 0xab, 0x3d, 0xdc, 0x64, 0x03, 0x19, 0x85, 0xba, 0xc5,
	0xb4, 0x31, 0xea, 0x89, 0x32, 0x70, 0x3b, 0x2e, 0xd1, 0x92, 0xd0, 0x9d, 0x38, 0x57, 0x9a, 0x02,
	0xb5, 0x84, 0xbb, 0x7c, 0x20, 0x1d, 0xf6, 0x01, 0xf7, 0x78, 0x26, 0x1d, 0xbe, 0x50, 0x8e, 0x96,
	0x08, 0x70, 0x3f, 0x2a, 0x29, 0x0f, 0x0f, 0xb8, 0x3b, 0x9b, 0x53, 0xce, 0x87, 0xbc, 0xf0, 0xbc,
	0x92, 0x4e, 0xe6, 0xbc, 0xcf, 0x47, 0x31, 0xa3, 0xa5, 0x7f, 0xe9, 0x31, 0x0f, 0x73, 0xb2, 0x50,
	0xd2, 0xc0, 0x13, 0x26, 0xb5, 0x74, 0xdf, 0x1d, 0x9f, 0x72, 0xfc, 0x0a, 0x9d, 0xff, 0x05, 0x87,
	0xf1, 0x01, 0xe0, 0x94, 0x17, 0xfc, 0x8c, 0x71, 0x23, 0x5b, 0xfa, 0x2f, 0xe1, 0x39, 0x53, 0x7e,
	0xd8, 0x40, 0xfe, 0x06, 0x51, 0x52, 0x7a, 0x0f, 0xc3, 0xe8, 0x94, 0x8a, 0xb6, 0xce, 0x20, 0xe5,
	0x72, 0xcc, 0x77, 0xc4, 0xdc, 0x11, 0x39, 0x28, 0xe0, 0x98, 0x0d, 0xda, 0xaa, 0x86, 0x13, 0xa6,
	0xb6, 0x0a, 0x6b, 0x34, 0x2d, 0x9c, 0x32, 0x61, 0x8a, 0x19, 0xf9, 0x3b, 0x63, 0xe8, 0xb1, 0xa5,
	0xa8, 0x2f, 0x3a, 0x17, 0x86, 0xb6, 0xfd, 0x32, 0xd9, 0x15, 0xdb, 0xdd, 0x2e, 0x3f, 0xa1, 0x6e,
	0x55, 0x68, 0xe1, 0x55, 0x7c, 0x23, 0x81, 0xfa, 0xe1, 0x35, 0x8b, 0xea, 0x30, 0x83, 0x37, 0x1c,
	0x23, 0xc3, 0xfc, 0x67, 0x40, 0x7e, 0x23, 0x6f, 0x17, 0x6f, 0x64, 0x0e, 0xef, 0x16, 0xd3, 0x26,
	0x94, 0x09, 0xde, 0x73, 0xe7, 0x58, 0x7a, 0x4a, 0xf1, 0xe1, 0xa0, 0xff, 0xfb, 0xef, 0x9f, 0x95,
	0xe5, 0xf5, 0xa5, 0x8f, 0x67, 0xdf, 0x4f, 0x4a, 0xe5, 0xab, 0x90, 0x0d, 0x73, 0x5b, 0xa7, 0x58,
	0x37, 0xca, 0xe1, 0xc8, 0xce, 0xd2, 0xf8, 0x41, 0xe4, 0x83, 0x12, 0xcd, 0xa0, 0x90, 0xce, 0x0f,
	0x70, 0xe6, 0xd3, 0x66, 0x5c, 0x76, 0xdf, 0x55, 0xd6, 0x8b, 0xd7, 0xa7, 0xff, 0x03, 0x00, 0x00,
	0xff, 0xff, 0x74, 0xc6, 0x0d, 0x2b, 0x6e, 0x03, 0x00, 0x00,
}
