// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/form/color.proto

package form // import "github.com/empirefox/protoc-gen-dart-ext/pkg/form"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NonColor_Color int32

const (
	NonColor_transparent NonColor_Color = 0
	NonColor_black       NonColor_Color = 1
	NonColor_black87     NonColor_Color = 2
	NonColor_black54     NonColor_Color = 3
	NonColor_black45     NonColor_Color = 4
	NonColor_black38     NonColor_Color = 5
	NonColor_black26     NonColor_Color = 6
	NonColor_black12     NonColor_Color = 7
	NonColor_white       NonColor_Color = 8
	NonColor_white70     NonColor_Color = 9
	NonColor_white30     NonColor_Color = 10
	NonColor_white12     NonColor_Color = 11
	NonColor_white10     NonColor_Color = 12
)

var NonColor_Color_name = map[int32]string{
	0:  "transparent",
	1:  "black",
	2:  "black87",
	3:  "black54",
	4:  "black45",
	5:  "black38",
	6:  "black26",
	7:  "black12",
	8:  "white",
	9:  "white70",
	10: "white30",
	11: "white12",
	12: "white10",
}
var NonColor_Color_value = map[string]int32{
	"transparent": 0,
	"black":       1,
	"black87":     2,
	"black54":     3,
	"black45":     4,
	"black38":     5,
	"black26":     6,
	"black12":     7,
	"white":       8,
	"white70":     9,
	"white30":     10,
	"white12":     11,
	"white10":     12,
}

func (x NonColor_Color) String() string {
	return proto.EnumName(NonColor_Color_name, int32(x))
}
func (NonColor_Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{1, 0}
}

type PrimaryColor_Color int32

const (
	PrimaryColor_red        PrimaryColor_Color = 0
	PrimaryColor_pink       PrimaryColor_Color = 1
	PrimaryColor_purple     PrimaryColor_Color = 2
	PrimaryColor_deepPurple PrimaryColor_Color = 3
	PrimaryColor_indigo     PrimaryColor_Color = 4
	PrimaryColor_blue       PrimaryColor_Color = 5
	PrimaryColor_lightBlue  PrimaryColor_Color = 6
	PrimaryColor_cyan       PrimaryColor_Color = 7
	PrimaryColor_teal       PrimaryColor_Color = 8
	PrimaryColor_green      PrimaryColor_Color = 9
	PrimaryColor_lightGreen PrimaryColor_Color = 10
	PrimaryColor_lime       PrimaryColor_Color = 11
	PrimaryColor_yellow     PrimaryColor_Color = 12
	PrimaryColor_amber      PrimaryColor_Color = 13
	PrimaryColor_orange     PrimaryColor_Color = 14
	PrimaryColor_deepOrange PrimaryColor_Color = 15
	PrimaryColor_brown      PrimaryColor_Color = 16
	PrimaryColor_grey       PrimaryColor_Color = 17
	PrimaryColor_blueGrey   PrimaryColor_Color = 18
)

var PrimaryColor_Color_name = map[int32]string{
	0:  "red",
	1:  "pink",
	2:  "purple",
	3:  "deepPurple",
	4:  "indigo",
	5:  "blue",
	6:  "lightBlue",
	7:  "cyan",
	8:  "teal",
	9:  "green",
	10: "lightGreen",
	11: "lime",
	12: "yellow",
	13: "amber",
	14: "orange",
	15: "deepOrange",
	16: "brown",
	17: "grey",
	18: "blueGrey",
}
var PrimaryColor_Color_value = map[string]int32{
	"red":        0,
	"pink":       1,
	"purple":     2,
	"deepPurple": 3,
	"indigo":     4,
	"blue":       5,
	"lightBlue":  6,
	"cyan":       7,
	"teal":       8,
	"green":      9,
	"lightGreen": 10,
	"lime":       11,
	"yellow":     12,
	"amber":      13,
	"orange":     14,
	"deepOrange": 15,
	"brown":      16,
	"grey":       17,
	"blueGrey":   18,
}

func (x PrimaryColor_Color) String() string {
	return proto.EnumName(PrimaryColor_Color_name, int32(x))
}
func (PrimaryColor_Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{2, 0}
}

type PrimaryColor_Shade int32

const (
	PrimaryColor_s50  PrimaryColor_Shade = 0
	PrimaryColor_s100 PrimaryColor_Shade = 1
	PrimaryColor_s200 PrimaryColor_Shade = 2
	PrimaryColor_s300 PrimaryColor_Shade = 3
	PrimaryColor_s400 PrimaryColor_Shade = 4
	PrimaryColor_s500 PrimaryColor_Shade = 5
	PrimaryColor_s600 PrimaryColor_Shade = 6
	PrimaryColor_s700 PrimaryColor_Shade = 7
	PrimaryColor_s800 PrimaryColor_Shade = 8
	PrimaryColor_s900 PrimaryColor_Shade = 9
)

var PrimaryColor_Shade_name = map[int32]string{
	0: "s50",
	1: "s100",
	2: "s200",
	3: "s300",
	4: "s400",
	5: "s500",
	6: "s600",
	7: "s700",
	8: "s800",
	9: "s900",
}
var PrimaryColor_Shade_value = map[string]int32{
	"s50":  0,
	"s100": 1,
	"s200": 2,
	"s300": 3,
	"s400": 4,
	"s500": 5,
	"s600": 6,
	"s700": 7,
	"s800": 8,
	"s900": 9,
}

func (x PrimaryColor_Shade) String() string {
	return proto.EnumName(PrimaryColor_Shade_name, int32(x))
}
func (PrimaryColor_Shade) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{2, 1}
}

type AccentColor_Color int32

const (
	AccentColor_red        AccentColor_Color = 0
	AccentColor_pink       AccentColor_Color = 1
	AccentColor_purple     AccentColor_Color = 2
	AccentColor_deepPurple AccentColor_Color = 3
	AccentColor_indigo     AccentColor_Color = 4
	AccentColor_blue       AccentColor_Color = 5
	AccentColor_lightBlue  AccentColor_Color = 6
	AccentColor_cyan       AccentColor_Color = 7
	AccentColor_teal       AccentColor_Color = 8
	AccentColor_green      AccentColor_Color = 9
	AccentColor_lightGreen AccentColor_Color = 10
	AccentColor_lime       AccentColor_Color = 11
	AccentColor_yellow     AccentColor_Color = 12
	AccentColor_amber      AccentColor_Color = 13
	AccentColor_orange     AccentColor_Color = 14
	AccentColor_deepOrange AccentColor_Color = 15
)

var AccentColor_Color_name = map[int32]string{
	0:  "red",
	1:  "pink",
	2:  "purple",
	3:  "deepPurple",
	4:  "indigo",
	5:  "blue",
	6:  "lightBlue",
	7:  "cyan",
	8:  "teal",
	9:  "green",
	10: "lightGreen",
	11: "lime",
	12: "yellow",
	13: "amber",
	14: "orange",
	15: "deepOrange",
}
var AccentColor_Color_value = map[string]int32{
	"red":        0,
	"pink":       1,
	"purple":     2,
	"deepPurple": 3,
	"indigo":     4,
	"blue":       5,
	"lightBlue":  6,
	"cyan":       7,
	"teal":       8,
	"green":      9,
	"lightGreen": 10,
	"lime":       11,
	"yellow":     12,
	"amber":      13,
	"orange":     14,
	"deepOrange": 15,
}

func (x AccentColor_Color) String() string {
	return proto.EnumName(AccentColor_Color_name, int32(x))
}
func (AccentColor_Color) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{3, 0}
}

type AccentColor_Shade int32

const (
	AccentColor_s50  AccentColor_Shade = 0
	AccentColor_s100 AccentColor_Shade = 1
	AccentColor_s200 AccentColor_Shade = 2
	AccentColor_s300 AccentColor_Shade = 3
	AccentColor_s400 AccentColor_Shade = 4
	AccentColor_s700 AccentColor_Shade = 5
)

var AccentColor_Shade_name = map[int32]string{
	0: "s50",
	1: "s100",
	2: "s200",
	3: "s300",
	4: "s400",
	5: "s700",
}
var AccentColor_Shade_value = map[string]int32{
	"s50":  0,
	"s100": 1,
	"s200": 2,
	"s300": 3,
	"s400": 4,
	"s700": 5,
}

func (x AccentColor_Shade) String() string {
	return proto.EnumName(AccentColor_Shade_name, int32(x))
}
func (AccentColor_Shade) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{3, 1}
}

type MaterialColor struct {
	// Types that are valid to be assigned to Color:
	//	*MaterialColor_Non
	//	*MaterialColor_Primary
	//	*MaterialColor_Accent
	Color                isMaterialColor_Color `protobuf_oneof:"color"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *MaterialColor) Reset()         { *m = MaterialColor{} }
func (m *MaterialColor) String() string { return proto.CompactTextString(m) }
func (*MaterialColor) ProtoMessage()    {}
func (*MaterialColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{0}
}
func (m *MaterialColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialColor.Unmarshal(m, b)
}
func (m *MaterialColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialColor.Marshal(b, m, deterministic)
}
func (dst *MaterialColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialColor.Merge(dst, src)
}
func (m *MaterialColor) XXX_Size() int {
	return xxx_messageInfo_MaterialColor.Size(m)
}
func (m *MaterialColor) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialColor.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialColor proto.InternalMessageInfo

type isMaterialColor_Color interface {
	isMaterialColor_Color()
}

type MaterialColor_Non struct {
	Non *NonColor `protobuf:"bytes,1,opt,name=non,proto3,oneof"`
}
type MaterialColor_Primary struct {
	Primary *PrimaryColor `protobuf:"bytes,2,opt,name=primary,proto3,oneof"`
}
type MaterialColor_Accent struct {
	Accent *AccentColor `protobuf:"bytes,3,opt,name=accent,proto3,oneof"`
}

func (*MaterialColor_Non) isMaterialColor_Color()     {}
func (*MaterialColor_Primary) isMaterialColor_Color() {}
func (*MaterialColor_Accent) isMaterialColor_Color()  {}

func (m *MaterialColor) GetColor() isMaterialColor_Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *MaterialColor) GetNon() *NonColor {
	if x, ok := m.GetColor().(*MaterialColor_Non); ok {
		return x.Non
	}
	return nil
}

func (m *MaterialColor) GetPrimary() *PrimaryColor {
	if x, ok := m.GetColor().(*MaterialColor_Primary); ok {
		return x.Primary
	}
	return nil
}

func (m *MaterialColor) GetAccent() *AccentColor {
	if x, ok := m.GetColor().(*MaterialColor_Accent); ok {
		return x.Accent
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*MaterialColor) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _MaterialColor_OneofMarshaler, _MaterialColor_OneofUnmarshaler, _MaterialColor_OneofSizer, []interface{}{
		(*MaterialColor_Non)(nil),
		(*MaterialColor_Primary)(nil),
		(*MaterialColor_Accent)(nil),
	}
}

func _MaterialColor_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*MaterialColor)
	// color
	switch x := m.Color.(type) {
	case *MaterialColor_Non:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Non); err != nil {
			return err
		}
	case *MaterialColor_Primary:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Primary); err != nil {
			return err
		}
	case *MaterialColor_Accent:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Accent); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("MaterialColor.Color has unexpected type %T", x)
	}
	return nil
}

func _MaterialColor_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*MaterialColor)
	switch tag {
	case 1: // color.non
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(NonColor)
		err := b.DecodeMessage(msg)
		m.Color = &MaterialColor_Non{msg}
		return true, err
	case 2: // color.primary
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(PrimaryColor)
		err := b.DecodeMessage(msg)
		m.Color = &MaterialColor_Primary{msg}
		return true, err
	case 3: // color.accent
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AccentColor)
		err := b.DecodeMessage(msg)
		m.Color = &MaterialColor_Accent{msg}
		return true, err
	default:
		return false, nil
	}
}

func _MaterialColor_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*MaterialColor)
	// color
	switch x := m.Color.(type) {
	case *MaterialColor_Non:
		s := proto.Size(x.Non)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MaterialColor_Primary:
		s := proto.Size(x.Primary)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *MaterialColor_Accent:
		s := proto.Size(x.Accent)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type NonColor struct {
	Color                NonColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=form.NonColor_Color" json:"color,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *NonColor) Reset()         { *m = NonColor{} }
func (m *NonColor) String() string { return proto.CompactTextString(m) }
func (*NonColor) ProtoMessage()    {}
func (*NonColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{1}
}
func (m *NonColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NonColor.Unmarshal(m, b)
}
func (m *NonColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NonColor.Marshal(b, m, deterministic)
}
func (dst *NonColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NonColor.Merge(dst, src)
}
func (m *NonColor) XXX_Size() int {
	return xxx_messageInfo_NonColor.Size(m)
}
func (m *NonColor) XXX_DiscardUnknown() {
	xxx_messageInfo_NonColor.DiscardUnknown(m)
}

var xxx_messageInfo_NonColor proto.InternalMessageInfo

func (m *NonColor) GetColor() NonColor_Color {
	if m != nil {
		return m.Color
	}
	return NonColor_transparent
}

type PrimaryColor struct {
	Color                PrimaryColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=form.PrimaryColor_Color" json:"color,omitempty"`
	Shade                PrimaryColor_Shade `protobuf:"varint,2,opt,name=shade,proto3,enum=form.PrimaryColor_Shade" json:"shade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PrimaryColor) Reset()         { *m = PrimaryColor{} }
func (m *PrimaryColor) String() string { return proto.CompactTextString(m) }
func (*PrimaryColor) ProtoMessage()    {}
func (*PrimaryColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{2}
}
func (m *PrimaryColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrimaryColor.Unmarshal(m, b)
}
func (m *PrimaryColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrimaryColor.Marshal(b, m, deterministic)
}
func (dst *PrimaryColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrimaryColor.Merge(dst, src)
}
func (m *PrimaryColor) XXX_Size() int {
	return xxx_messageInfo_PrimaryColor.Size(m)
}
func (m *PrimaryColor) XXX_DiscardUnknown() {
	xxx_messageInfo_PrimaryColor.DiscardUnknown(m)
}

var xxx_messageInfo_PrimaryColor proto.InternalMessageInfo

func (m *PrimaryColor) GetColor() PrimaryColor_Color {
	if m != nil {
		return m.Color
	}
	return PrimaryColor_red
}

func (m *PrimaryColor) GetShade() PrimaryColor_Shade {
	if m != nil {
		return m.Shade
	}
	return PrimaryColor_s50
}

type AccentColor struct {
	Color                AccentColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=form.AccentColor_Color" json:"color,omitempty"`
	Shade                AccentColor_Shade `protobuf:"varint,2,opt,name=shade,proto3,enum=form.AccentColor_Shade" json:"shade,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AccentColor) Reset()         { *m = AccentColor{} }
func (m *AccentColor) String() string { return proto.CompactTextString(m) }
func (*AccentColor) ProtoMessage()    {}
func (*AccentColor) Descriptor() ([]byte, []int) {
	return fileDescriptor_color_25c32574b6e5648c, []int{3}
}
func (m *AccentColor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccentColor.Unmarshal(m, b)
}
func (m *AccentColor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccentColor.Marshal(b, m, deterministic)
}
func (dst *AccentColor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccentColor.Merge(dst, src)
}
func (m *AccentColor) XXX_Size() int {
	return xxx_messageInfo_AccentColor.Size(m)
}
func (m *AccentColor) XXX_DiscardUnknown() {
	xxx_messageInfo_AccentColor.DiscardUnknown(m)
}

var xxx_messageInfo_AccentColor proto.InternalMessageInfo

func (m *AccentColor) GetColor() AccentColor_Color {
	if m != nil {
		return m.Color
	}
	return AccentColor_red
}

func (m *AccentColor) GetShade() AccentColor_Shade {
	if m != nil {
		return m.Shade
	}
	return AccentColor_s50
}

func init() {
	proto.RegisterType((*MaterialColor)(nil), "form.MaterialColor")
	proto.RegisterType((*NonColor)(nil), "form.NonColor")
	proto.RegisterType((*PrimaryColor)(nil), "form.PrimaryColor")
	proto.RegisterType((*AccentColor)(nil), "form.AccentColor")
	proto.RegisterEnum("form.NonColor_Color", NonColor_Color_name, NonColor_Color_value)
	proto.RegisterEnum("form.PrimaryColor_Color", PrimaryColor_Color_name, PrimaryColor_Color_value)
	proto.RegisterEnum("form.PrimaryColor_Shade", PrimaryColor_Shade_name, PrimaryColor_Shade_value)
	proto.RegisterEnum("form.AccentColor_Color", AccentColor_Color_name, AccentColor_Color_value)
	proto.RegisterEnum("form.AccentColor_Shade", AccentColor_Shade_name, AccentColor_Shade_value)
}

func init() { proto.RegisterFile("protos/form/color.proto", fileDescriptor_color_25c32574b6e5648c) }

var fileDescriptor_color_25c32574b6e5648c = []byte{
	// 586 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xdc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xae, 0xe3, 0x3a, 0x3f, 0x93, 0x34, 0xdd, 0x5a, 0x48, 0xcd, 0x11, 0xf9, 0x84, 0x40, 0x71,
	0x9c, 0xbf, 0x26, 0x1c, 0x09, 0x87, 0x72, 0x01, 0xaa, 0x70, 0xe3, 0xb6, 0x71, 0xb6, 0x8e, 0xa9,
	0xed, 0xb5, 0xd6, 0x8e, 0xd2, 0x3c, 0x0a, 0x6f, 0xc1, 0x5b, 0xf4, 0x59, 0xe0, 0x0d, 0xb8, 0x31,
	0x3b, 0x4e, 0x4c, 0xad, 0xf6, 0xc6, 0x8d, 0x8b, 0xf5, 0x7d, 0x33, 0xdf, 0xac, 0x77, 0xbe, 0xcf,
	0x32, 0x5c, 0xa6, 0x4a, 0xe6, 0x32, 0x1b, 0xdc, 0x4a, 0x15, 0x0f, 0x7c, 0x19, 0x49, 0xe5, 0x52,
	0xc5, 0x3e, 0xd5, 0x15, 0xe7, 0xbb, 0x01, 0x67, 0x1f, 0x79, 0x2e, 0x54, 0xc8, 0xa3, 0xf7, 0xba,
	0x6b, 0x3b, 0x60, 0x26, 0x32, 0xe9, 0x19, 0x2f, 0x8d, 0x57, 0xed, 0x51, 0xd7, 0xd5, 0x2a, 0xf7,
	0x93, 0x4c, 0xa8, 0xf9, 0xe1, 0x64, 0xa9, 0x9b, 0xb6, 0x0b, 0x8d, 0x54, 0x85, 0x31, 0x57, 0xfb,
	0x5e, 0x8d, 0x74, 0x76, 0xa1, 0xbb, 0x29, 0x8a, 0x47, 0xed, 0x51, 0x64, 0xbf, 0x81, 0x3a, 0xf7,
	0x7d, 0x91, 0xe4, 0x3d, 0x93, 0xe4, 0x17, 0x85, 0xfc, 0x1d, 0xd5, 0x8e, 0xea, 0x83, 0x64, 0xd1,
	0x00, 0x8b, 0xee, 0xe9, 0xfc, 0x34, 0xa0, 0x79, 0x7c, 0xb3, 0xfd, 0xfa, 0x50, 0xa5, 0x8b, 0x75,
	0x47, 0x2f, 0xaa, 0x17, 0x73, 0xe9, 0xb9, 0x3c, 0x0c, 0xfe, 0x30, 0xc0, 0x2a, 0xa6, 0xce, 0xa1,
	0x9d, 0x2b, 0x9e, 0x64, 0x29, 0x57, 0x78, 0x34, 0x3b, 0xb1, 0x5b, 0x60, 0xad, 0x22, 0xee, 0xdf,
	0x31, 0xc3, 0x6e, 0x43, 0x83, 0xe0, 0x7c, 0xc6, 0x6a, 0x25, 0x99, 0x4e, 0x98, 0x59, 0x92, 0xc9,
	0x94, 0x9d, 0x96, 0x64, 0x3c, 0x67, 0x56, 0x49, 0x46, 0x57, 0xac, 0x5e, 0x92, 0xe1, 0x88, 0x35,
	0xf4, 0xc1, 0xbb, 0x4d, 0x98, 0x0b, 0xd6, 0xd4, 0x75, 0x82, 0x33, 0x8f, 0xb5, 0x4a, 0x32, 0xf6,
	0x18, 0x94, 0x04, 0x27, 0xda, 0x7f, 0x89, 0xc7, 0x3a, 0xce, 0x83, 0x09, 0x9d, 0xc7, 0xee, 0xa1,
	0xc5, 0x95, 0x7d, 0x7b, 0x4f, 0x0d, 0xae, 0xec, 0xac, 0xf5, 0xd9, 0x86, 0xaf, 0x05, 0x05, 0xf2,
	0xbc, 0xfe, 0x8b, 0xee, 0x2f, 0x0b, 0x99, 0xf3, 0xab, 0xf4, 0xa8, 0x01, 0xa6, 0x12, 0x6b, 0xf4,
	0xa6, 0x09, 0xa7, 0x69, 0x98, 0x68, 0x6b, 0x00, 0xea, 0xe9, 0x56, 0xa5, 0x91, 0x40, 0x67, 0xba,
	0x00, 0x6b, 0x21, 0xd2, 0x9b, 0x82, 0x9b, 0xba, 0x17, 0x26, 0xeb, 0x30, 0x90, 0xe8, 0x0d, 0x4e,
	0xac, 0xa2, 0xad, 0x40, 0x63, 0xce, 0xa0, 0x15, 0x85, 0xc1, 0x26, 0x5f, 0x68, 0x5a, 0xd7, 0x0d,
	0x7f, 0xcf, 0x13, 0xf4, 0x05, 0x51, 0x2e, 0x78, 0x84, 0xb6, 0xa0, 0x43, 0x81, 0x12, 0x22, 0x41,
	0x53, 0xf0, 0x4c, 0x52, 0x5f, 0x13, 0x07, 0x2d, 0x8a, 0xc2, 0x58, 0xa0, 0x29, 0x78, 0xfa, 0x5e,
	0x44, 0x91, 0xdc, 0xb1, 0x8e, 0x1e, 0xe0, 0xf1, 0x4a, 0x28, 0x76, 0xa6, 0xcb, 0x12, 0x73, 0x0c,
	0x04, 0xeb, 0x1e, 0x2f, 0xf4, 0xb9, 0xe0, 0xe7, 0x14, 0xa9, 0x92, 0xbb, 0x84, 0x31, 0x7d, 0x0e,
	0xbe, 0x62, 0xcf, 0x2e, 0xec, 0x0e, 0x34, 0xf5, 0xcd, 0xae, 0x35, 0xb3, 0x9d, 0x6f, 0x60, 0xd1,
	0xf2, 0x7a, 0xd7, 0x6c, 0xea, 0x15, 0xbb, 0x66, 0x43, 0xcf, 0xc3, 0x5d, 0x35, 0x1a, 0x21, 0xaa,
	0x11, 0x1a, 0x23, 0x32, 0x09, 0x4d, 0x10, 0xd1, 0x86, 0x38, 0xe0, 0xe1, 0x86, 0x1a, 0x5d, 0x21,
	0xa2, 0xe5, 0xb2, 0x19, 0x22, 0x5a, 0x2e, 0x9b, 0x23, 0x6a, 0x12, 0x7a, 0x8b, 0xa8, 0xe5, 0xfc,
	0xae, 0x41, 0xfb, 0xd1, 0x87, 0x6d, 0xf7, 0xab, 0x41, 0x5e, 0x3e, 0xf9, 0xf4, 0xab, 0x39, 0xf6,
	0xab, 0x39, 0x3e, 0x23, 0xaf, 0xc4, 0xf8, 0xf0, 0xbf, 0xc4, 0xe8, 0x2c, 0xfe, 0x29, 0x23, 0x9d,
	0x87, 0xb5, 0x18, 0x7f, 0x1d, 0x06, 0x61, 0xbe, 0xd9, 0xae, 0x5c, 0x5f, 0xc6, 0x03, 0x11, 0xa7,
	0xa1, 0x12, 0xb7, 0xf2, 0x7e, 0x40, 0x7f, 0x3c, 0xbf, 0x1f, 0x88, 0xa4, 0xbf, 0xe6, 0x2a, 0xef,
	0x8b, 0xfb, 0x7c, 0x90, 0xde, 0x05, 0xf4, 0x53, 0x5c, 0xd5, 0xa9, 0x3b, 0xfe, 0x13, 0x00, 0x00,
	0xff, 0xff, 0x0c, 0x03, 0x3e, 0x62, 0x2a, 0x05, 0x00, 0x00,
}
