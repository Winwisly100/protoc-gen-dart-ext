// DO NOT EDIT. Generated by protoc-gen-dart-ext/tools.

import 'finvtw.dart';

enum Form { other, zero, one, two, few, many }

typedef PluralFunc = Form Function(num value, bool ordinal);
Form matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchAkBhGuwLnMgNsoTiWa(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    return Form.other;
  }

  if (p && n >= 0 && n <= 1) return Form.one;
  return Form.other;
}

Form matchAmFaKnZu(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();

  if (ordinal) {
    return Form.other;
  }

  if (i == 0 || n == 1) return Form.one;
  return Form.other;
}

Form matchAr(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n100 = n % 100;

  if (ordinal) {
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if (n == 1) return Form.one;
  if (n == 2) return Form.two;
  if (p && n100 >= 3 && n100 <= 10) return Form.few;
  if (p && n100 >= 11 && n100 <= 99) return Form.many;
  return Form.other;
}

Form matchArs(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n100 = n % 100;

  if (ordinal) {
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if (n == 1) return Form.one;
  if (n == 2) return Form.two;
  if (p && n100 >= 3 && n100 <= 10) return Form.few;
  if (p && n100 >= 11 && n100 <= 99) return Form.many;
  return Form.other;
}

Form matchAsBn(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();

  if (ordinal) {
    if (n == 1 || n == 5 || n == 7 || n == 8 || n == 9 || n == 10)
      return Form.one;
    if (n == 2 || n == 3) return Form.two;
    if (n == 4) return Form.few;
    if (n == 6) return Form.many;
    return Form.other;
  }

  if (i == 0 || n == 1) return Form.one;
  return Form.other;
}

Form
    matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog(
        num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchAstIoJiPtPTYi(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchAz(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();
  final i10 = i % 10;
  final i100 = i % 100;
  final i1000 = i % 1000;

  if (ordinal) {
    if (i10 == 1 ||
        i10 == 2 ||
        i10 == 5 ||
        i10 == 7 ||
        i10 == 8 ||
        i100 == 20 ||
        i100 == 50 ||
        i100 == 70 ||
        i100 == 80) return Form.one;
    if (i10 == 3 ||
        i10 == 4 ||
        i1000 == 100 ||
        i1000 == 200 ||
        i1000 == 300 ||
        i1000 == 400 ||
        i1000 == 500 ||
        i1000 == 600 ||
        i1000 == 700 ||
        i1000 == 800 ||
        i1000 == 900) return Form.few;
    if (i == 0 || i10 == 6 || i100 == 40 || i100 == 60 || i100 == 90)
      return Form.many;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchBe(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n10 = n % 10;
  final n100 = n % 100;

  if (ordinal) {
    if ((n10 == 2 || n10 == 3) && n100 != 12 && n100 != 13) return Form.few;
    return Form.other;
  }

  if (n10 == 1 && n100 != 11) return Form.one;
  if (p && n10 >= 2 && n10 <= 4 && (n100 < 12 || n100 > 14)) return Form.few;
  if (n10 == 0 || p && n10 >= 5 && n10 <= 9 || p && n100 >= 11 && n100 <= 14)
    return Form.many;
  return Form.other;
}

Form matchBr(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n10 = n % 10;
  final n100 = n % 100;
  final n1000000 = n % 1000000;

  if (ordinal) {
    return Form.other;
  }

  if (n10 == 1 && n100 != 11 && n100 != 71 && n100 != 91) return Form.one;
  if (n10 == 2 && n100 != 12 && n100 != 72 && n100 != 92) return Form.two;
  if (p &&
      (p && n10 >= 3 && n10 <= 4 || n10 == 9) &&
      (n100 < 10 || n100 > 19) &&
      (n100 < 70 || n100 > 79) &&
      (n100 < 90 || n100 > 99)) return Form.few;
  if (n != 0 && n1000000 == 0) return Form.many;
  return Form.other;
}

Form matchBsHrShSrSrLatn(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;
    final f10 = f % 10;
    final f100 = f % 100;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11)
      return Form.one;
    if (v == 0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14) ||
        f10 >= 2 && f10 <= 4 && (f100 < 12 || f100 > 14)) return Form.few;
    return Form.other;
  });
}

Form matchCa(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      if (n == 1 || n == 3) return Form.one;
      if (n == 2) return Form.two;
      if (n == 4) return Form.few;
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchCeb(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final f10 = f % 10;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && (i == 1 || i == 2 || i == 3) ||
        v == 0 && i10 != 4 && i10 != 6 && i10 != 9 ||
        v != 0 && f10 != 4 && f10 != 6 && f10 != 9) return Form.one;
    return Form.other;
  });
}

Form matchCsSk(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    if (i >= 2 && i <= 4 && v == 0) return Form.few;
    if (v != 0) return Form.many;
    return Form.other;
  });
}

Form matchCy(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    if (n == 0 || n == 7 || n == 8 || n == 9) return Form.zero;
    if (n == 1) return Form.one;
    if (n == 2) return Form.two;
    if (n == 3 || n == 4) return Form.few;
    if (n == 5 || n == 6) return Form.many;
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if (n == 1) return Form.one;
  if (n == 2) return Form.two;
  if (n == 3) return Form.few;
  if (n == 6) return Form.many;
  return Form.other;
}

Form matchDa(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      return Form.other;
    }

    if (n == 1 || t != 0 && (i == 0 || i == 1)) return Form.one;
    return Form.other;
  });
}

Form matchDeEtFiFyGlIaNlSwUr(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchDsbHsb(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i100 = i % 100;
    final f100 = f % 100;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && i100 == 1 || f100 == 1) return Form.one;
    if (v == 0 && i100 == 2 || f100 == 2) return Form.two;
    if (v == 0 && i100 >= 3 && i100 <= 4 || f100 >= 3 && f100 <= 4)
      return Form.few;
    return Form.other;
  });
}

Form matchEn(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final n10 = n % 10;
    final n100 = n % 100;

    if (ordinal) {
      if (n10 == 1 && n100 != 11) return Form.one;
      if (n10 == 2 && n100 != 12) return Form.two;
      if (n10 == 3 && n100 != 13) return Form.few;
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchFfKab(num value, bool ordinal) {
  final i = value.abs().toInt();

  if (ordinal) {
    return Form.other;
  }

  if (i == 0 || i == 1) return Form.one;
  return Form.other;
}

Form matchFilTl(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final f10 = f % 10;

    if (ordinal) {
      if (n == 1) return Form.one;
      return Form.other;
    }

    if (v == 0 && (i == 1 || i == 2 || i == 3) ||
        v == 0 && i10 != 4 && i10 != 6 && i10 != 9 ||
        v != 0 && f10 != 4 && f10 != 6 && f10 != 9) return Form.one;
    return Form.other;
  });
}

Form matchFrHy(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();

  if (ordinal) {
    if (n == 1) return Form.one;
    return Form.other;
  }

  if (i == 0 || i == 1) return Form.one;
  return Form.other;
}

Form matchGa(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    if (n == 1) return Form.one;
    return Form.other;
  }

  if (n == 1) return Form.one;
  if (n == 2) return Form.two;
  if (p && n >= 3 && n <= 6) return Form.few;
  if (p && n >= 7 && n <= 10) return Form.many;
  return Form.other;
}

Form matchGd(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    if (n == 1 || n == 11) return Form.one;
    if (n == 2 || n == 12) return Form.two;
    if (n == 3 || n == 13) return Form.few;
    return Form.other;
  }

  if (n == 1 || n == 11) return Form.one;
  if (n == 2 || n == 12) return Form.two;
  if (p && n >= 3 && n <= 10 || p && n >= 13 && n <= 19) return Form.few;
  return Form.other;
}

Form matchGuHi(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();

  if (ordinal) {
    if (n == 1) return Form.one;
    if (n == 2 || n == 3) return Form.two;
    if (n == 4) return Form.few;
    if (n == 6) return Form.many;
    return Form.other;
  }

  if (i == 0 || n == 1) return Form.one;
  return Form.other;
}

Form matchGv(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && i10 == 1) return Form.one;
    if (v == 0 && i10 == 2) return Form.two;
    if (v == 0 &&
        (i100 == 0 || i100 == 20 || i100 == 40 || i100 == 60 || i100 == 80))
      return Form.few;
    if (v != 0) return Form.many;
    return Form.other;
  });
}

Form matchHeIw(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final p = w == 0;
    final n10 = n % 10;

    if (ordinal) {
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    if (i == 2 && v == 0) return Form.two;
    if (p && v == 0 && (n < 0 || n > 10) && n10 == 0) return Form.many;
    return Form.other;
  });
}

Form matchHu(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    if (n == 1 || n == 5) return Form.one;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchIs(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;

    if (ordinal) {
      return Form.other;
    }

    if (t == 0 && i10 == 1 && i100 != 11 || t != 0) return Form.one;
    return Form.other;
  });
}

Form matchItScScn(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      if (n == 11 || n == 8 || n == 80 || n == 800) return Form.many;
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchIuNaqSeSmaSmiSmjSmnSms(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    return Form.other;
  }

  if (n == 1) return Form.one;
  if (n == 2) return Form.two;
  return Form.other;
}

Form matchKa(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();
  final i100 = i % 100;

  if (ordinal) {
    if (i == 1) return Form.one;
    if (i == 0 ||
        i100 >= 2 && i100 <= 20 ||
        i100 == 40 ||
        i100 == 60 ||
        i100 == 80) return Form.many;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchKk(num value, bool ordinal) {
  final n = value.abs();
  final n10 = n % 10;

  if (ordinal) {
    if (n10 == 6 || n10 == 9 || n10 == 0 && n != 0) return Form.many;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchKsh(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if (n == 1) return Form.one;
  return Form.other;
}

Form matchKw(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n100 = n % 100;

  if (ordinal) {
    if (p && n >= 1 && n <= 4 ||
        p && n100 >= 1 && n100 <= 4 ||
        p && n100 >= 21 && n100 <= 24 ||
        p && n100 >= 41 && n100 <= 44 ||
        p && n100 >= 61 && n100 <= 64 ||
        p && n100 >= 81 && n100 <= 84) return Form.one;
    if (n == 5 || n100 == 5) return Form.many;
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if (n == 1) return Form.one;
  if (n100 == 2 || n100 == 22 || n100 == 42 || n100 == 62 || n100 == 82)
    return Form.two;
  if (n100 == 3 || n100 == 23 || n100 == 43 || n100 == 63 || n100 == 83)
    return Form.few;
  if (n != 1 &&
      (n100 == 1 || n100 == 21 || n100 == 41 || n100 == 61 || n100 == 81))
    return Form.many;
  return Form.other;
}

Form matchLag(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();

  if (ordinal) {
    return Form.other;
  }

  if (n == 0) return Form.zero;
  if ((i == 0 || i == 1) && n != 0) return Form.one;
  return Form.other;
}

Form matchLoMsVi(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    if (n == 1) return Form.one;
    return Form.other;
  }

  return Form.other;
}

Form matchLt(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final p = w == 0;
    final n10 = n % 10;
    final n100 = n % 100;

    if (ordinal) {
      return Form.other;
    }

    if (p && n10 == 1 && (n100 < 11 || n100 > 19)) return Form.one;
    if (p && n10 >= 2 && n10 <= 9 && (n100 < 11 || n100 > 19)) return Form.few;
    if (f != 0) return Form.many;
    return Form.other;
  });
}

Form matchLvPrg(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final p = w == 0;
    final n10 = n % 10;
    final n100 = n % 100;
    final f100 = f % 100;
    final f10 = f % 10;

    if (ordinal) {
      return Form.other;
    }

    if (n10 == 0 ||
        p && n100 >= 11 && n100 <= 19 ||
        v == 2 && f100 >= 11 && f100 <= 19) return Form.zero;
    if (n10 == 1 && n100 != 11 ||
        v == 2 && f10 == 1 && f100 != 11 ||
        v != 2 && f10 == 1) return Form.one;
    return Form.other;
  });
}

Form matchMk(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;
    final f10 = f % 10;
    final f100 = f % 100;

    if (ordinal) {
      if (i10 == 1 && i100 != 11) return Form.one;
      if (i10 == 2 && i100 != 12) return Form.two;
      if ((i10 == 7 || i10 == 8) && i100 != 17 && i100 != 18) return Form.many;
      return Form.other;
    }

    if (v == 0 && i10 == 1 && i100 != 11 || f10 == 1 && f100 != 11)
      return Form.one;
    return Form.other;
  });
}

Form matchMoRoRoMD(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final p = w == 0;
    final n100 = n % 100;

    if (ordinal) {
      if (n == 1) return Form.one;
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    if (v != 0 || n == 0 || p && n100 >= 2 && n100 <= 19) return Form.few;
    return Form.other;
  });
}

Form matchMr(num value, bool ordinal) {
  final n = value.abs();

  if (ordinal) {
    if (n == 1) return Form.one;
    if (n == 2 || n == 3) return Form.two;
    if (n == 4) return Form.few;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchMt(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;
  final n100 = n % 100;

  if (ordinal) {
    return Form.other;
  }

  if (n == 1) return Form.one;
  if (n == 0 || p && n100 >= 2 && n100 <= 10) return Form.few;
  if (p && n100 >= 11 && n100 <= 19) return Form.many;
  return Form.other;
}

Form matchNe(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    if (p && n >= 1 && n <= 4) return Form.one;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchOr(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    if (n == 1 || n == 5 || p && n >= 7 && n <= 9) return Form.one;
    if (n == 2 || n == 3) return Form.two;
    if (n == 4) return Form.few;
    if (n == 6) return Form.many;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchPa(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    return Form.other;
  }

  if (p && n >= 0 && n <= 1) return Form.one;
  return Form.other;
}

Form matchPl(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;

    if (ordinal) {
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    if (v == 0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14))
      return Form.few;
    if (v == 0 && i != 1 && i10 >= 0 && i10 <= 1 ||
        v == 0 && i10 >= 5 && i10 <= 9 ||
        v == 0 && i100 >= 12 && i100 <= 14) return Form.many;
    return Form.other;
  });
}

Form matchPt(num value, bool ordinal) {
  final i = value.abs().toInt();

  if (ordinal) {
    return Form.other;
  }

  if (i >= 0 && i <= 1) return Form.one;
  return Form.other;
}

Form matchRu(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i10 = i % 10;
    final i100 = i % 100;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && i10 == 1 && i100 != 11) return Form.one;
    if (v == 0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14))
      return Form.few;
    if (v == 0 && i10 == 0 ||
        v == 0 && i10 >= 5 && i10 <= 9 ||
        v == 0 && i100 >= 11 && i100 <= 14) return Form.many;
    return Form.other;
  });
}

Form matchShi(num value, bool ordinal) {
  final n = value.abs();
  final i = n.toInt();
  final p = i == n;

  if (ordinal) {
    return Form.other;
  }

  if (i == 0 || n == 1) return Form.one;
  if (p && n >= 2 && n <= 10) return Form.few;
  return Form.other;
}

Form matchSi(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    if (ordinal) {
      return Form.other;
    }

    if (n == 0 || n == 1 || i == 0 && f == 1) return Form.one;
    return Form.other;
  });
}

Form matchSl(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final i100 = i % 100;

    if (ordinal) {
      return Form.other;
    }

    if (v == 0 && i100 == 1) return Form.one;
    if (v == 0 && i100 == 2) return Form.two;
    if (v == 0 && i100 >= 3 && i100 <= 4 || v != 0) return Form.few;
    return Form.other;
  });
}

Form matchSq(num value, bool ordinal) {
  final n = value.abs();
  final n10 = n % 10;
  final n100 = n % 100;

  if (ordinal) {
    if (n == 1) return Form.one;
    if (n10 == 4 && n100 != 14) return Form.many;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchSv(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final n10 = n % 10;
    final n100 = n % 100;

    if (ordinal) {
      if ((n10 == 1 || n10 == 2) && n100 != 11 && n100 != 12) return Form.one;
      return Form.other;
    }

    if (i == 1 && v == 0) return Form.one;
    return Form.other;
  });
}

Form matchTk(num value, bool ordinal) {
  final n = value.abs();
  final n10 = n % 10;

  if (ordinal) {
    if (n10 == 6 || n10 == 9 || n == 10) return Form.few;
    return Form.other;
  }

  if (n == 1) return Form.one;
  return Form.other;
}

Form matchTzm(num value, bool ordinal) {
  final n = value.abs();
  final p = n.toInt() == n;

  if (ordinal) {
    return Form.other;
  }

  if (p && n >= 0 && n <= 1 || p && n >= 11 && n <= 99) return Form.one;
  return Form.other;
}

Form matchUk(num value, bool ordinal) {
  return finvtw(value, (f, i, n, v, t, w) {
    final n10 = n % 10;
    final n100 = n % 100;
    final i10 = i % 10;
    final i100 = i % 100;

    if (ordinal) {
      if (n10 == 3 && n100 != 13) return Form.few;
      return Form.other;
    }

    if (v == 0 && i10 == 1 && i100 != 11) return Form.one;
    if (v == 0 && i10 >= 2 && i10 <= 4 && (i100 < 12 || i100 > 14))
      return Form.few;
    if (v == 0 && i10 == 0 ||
        v == 0 && i10 >= 5 && i10 <= 9 ||
        v == 0 && i100 >= 11 && i100 <= 14) return Form.many;
    return Form.other;
  });
}

Form matchOther(num value, bool ordinal) => Form.other;

final Map<String, PluralFunc> rules = {
  "af": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "bg": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ce": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "el": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "es": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "eu": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "gsw": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ky": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ml": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "mn": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "nb": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ps": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "sd": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ta": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "te": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "tr": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "uz": matchAfBgCeElEsEuGswKyMlMnNbPsSdTaTeTrUz,
  "ak": matchAkBhGuwLnMgNsoTiWa,
  "bh": matchAkBhGuwLnMgNsoTiWa,
  "guw": matchAkBhGuwLnMgNsoTiWa,
  "ln": matchAkBhGuwLnMgNsoTiWa,
  "mg": matchAkBhGuwLnMgNsoTiWa,
  "nso": matchAkBhGuwLnMgNsoTiWa,
  "ti": matchAkBhGuwLnMgNsoTiWa,
  "wa": matchAkBhGuwLnMgNsoTiWa,
  "am": matchAmFaKnZu,
  "fa": matchAmFaKnZu,
  "kn": matchAmFaKnZu,
  "zu": matchAmFaKnZu,
  "ar": matchAr,
  "ars": matchArs,
  "as": matchAsBn,
  "bn": matchAsBn,
  "asa":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "bem":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "bez":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "brx":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "cgg":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "chr":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ckb":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "dv":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ee":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "eo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "fo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "fur":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ha":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "haw":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "jgo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "jmc":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "kaj":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "kcg":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "kkj":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "kl":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ks":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ksb":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ku":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "lb":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "lg":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "mas":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "mgo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nah":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nd":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nn":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nnh":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "no":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nr":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ny":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "nyn":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "om":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "os":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "pap":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "rm":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "rof":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "rwk":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "saq":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "sdh":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "seh":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "sn":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "so":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ss":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ssy":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "st":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "syr":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "teo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "tig":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "tn":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ts":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ug":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ve":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "vo":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "vun":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "wae":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "xh":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "xog":
      matchAsaBemBezBrxCggChrCkbDvEeEoFoFurHaHawJgoJmcKajKcgKkjKlKsKsbKuLbLgMasMgoNahNdNnNnhNoNrNyNynOmOsPapRmRofRwkSaqSdhSehSnSoSsSsyStSyrTeoTigTnTsUgVeVoVunWaeXhXog,
  "ast": matchAstIoJiPtPTYi,
  "io": matchAstIoJiPtPTYi,
  "ji": matchAstIoJiPtPTYi,
  "pt-PT": matchAstIoJiPtPTYi,
  "yi": matchAstIoJiPtPTYi,
  "az": matchAz,
  "be": matchBe,
  "br": matchBr,
  "bs": matchBsHrShSrSrLatn,
  "hr": matchBsHrShSrSrLatn,
  "sh": matchBsHrShSrSrLatn,
  "sr": matchBsHrShSrSrLatn,
  "sr-Latn": matchBsHrShSrSrLatn,
  "ca": matchCa,
  "ceb": matchCeb,
  "cs": matchCsSk,
  "sk": matchCsSk,
  "cy": matchCy,
  "da": matchDa,
  "de": matchDeEtFiFyGlIaNlSwUr,
  "et": matchDeEtFiFyGlIaNlSwUr,
  "fi": matchDeEtFiFyGlIaNlSwUr,
  "fy": matchDeEtFiFyGlIaNlSwUr,
  "gl": matchDeEtFiFyGlIaNlSwUr,
  "ia": matchDeEtFiFyGlIaNlSwUr,
  "nl": matchDeEtFiFyGlIaNlSwUr,
  "sw": matchDeEtFiFyGlIaNlSwUr,
  "ur": matchDeEtFiFyGlIaNlSwUr,
  "dsb": matchDsbHsb,
  "hsb": matchDsbHsb,
  "en": matchEn,
  "ff": matchFfKab,
  "kab": matchFfKab,
  "fil": matchFilTl,
  "tl": matchFilTl,
  "fr": matchFrHy,
  "hy": matchFrHy,
  "ga": matchGa,
  "gd": matchGd,
  "gu": matchGuHi,
  "hi": matchGuHi,
  "gv": matchGv,
  "he": matchHeIw,
  "iw": matchHeIw,
  "hu": matchHu,
  "is": matchIs,
  "it": matchItScScn,
  "sc": matchItScScn,
  "scn": matchItScScn,
  "iu": matchIuNaqSeSmaSmiSmjSmnSms,
  "naq": matchIuNaqSeSmaSmiSmjSmnSms,
  "se": matchIuNaqSeSmaSmiSmjSmnSms,
  "sma": matchIuNaqSeSmaSmiSmjSmnSms,
  "smi": matchIuNaqSeSmaSmiSmjSmnSms,
  "smj": matchIuNaqSeSmaSmiSmjSmnSms,
  "smn": matchIuNaqSeSmaSmiSmjSmnSms,
  "sms": matchIuNaqSeSmaSmiSmjSmnSms,
  "ka": matchKa,
  "kk": matchKk,
  "ksh": matchKsh,
  "kw": matchKw,
  "lag": matchLag,
  "lo": matchLoMsVi,
  "ms": matchLoMsVi,
  "vi": matchLoMsVi,
  "lt": matchLt,
  "lv": matchLvPrg,
  "prg": matchLvPrg,
  "mk": matchMk,
  "mo": matchMoRoRoMD,
  "ro": matchMoRoRoMD,
  "ro-MD": matchMoRoRoMD,
  "mr": matchMr,
  "mt": matchMt,
  "ne": matchNe,
  "or": matchOr,
  "pa": matchPa,
  "pl": matchPl,
  "pt": matchPt,
  "ru": matchRu,
  "shi": matchShi,
  "si": matchSi,
  "sl": matchSl,
  "sq": matchSq,
  "sv": matchSv,
  "tk": matchTk,
  "tzm": matchTzm,
  "uk": matchUk,
  "bm": matchOther,
  "bo": matchOther,
  "dz": matchOther,
  "id": matchOther,
  "ig": matchOther,
  "ii": matchOther,
  "in": matchOther,
  "ja": matchOther,
  "jbo": matchOther,
  "jv": matchOther,
  "jw": matchOther,
  "kde": matchOther,
  "kea": matchOther,
  "km": matchOther,
  "ko": matchOther,
  "lkt": matchOther,
  "my": matchOther,
  "nqo": matchOther,
  "root": matchOther,
  "sah": matchOther,
  "ses": matchOther,
  "sg": matchOther,
  "th": matchOther,
  "to": matchOther,
  "wo": matchOther,
  "yo": matchOther,
  "yue": matchOther,
  "zh": matchOther,
};
