// DO NOT EDIT. Generated by protoc-gen-dart-ext/tools.

import '../plural/plural.dart';
import './units.l10n.dart';

abstract class _Valuer {
  String of(UnitsLocalization l, Form p);
}

class _NoAtom implements _Valuer {
  const _NoAtom();
  String of(UnitsLocalization l, Form p) => '';
}

class _Meter implements _Valuer {
  const _Meter();
  String of(UnitsLocalization l, Form p) => l.atomMeter(p);
}

class _Foot implements _Valuer {
  const _Foot();
  String of(UnitsLocalization l, Form p) => l.atomFoot(p);
}

class _Inch implements _Valuer {
  const _Inch();
  String of(UnitsLocalization l, Form p) => l.atomInch(p);
}

class _Yard implements _Valuer {
  const _Yard();
  String of(UnitsLocalization l, Form p) => l.atomYard(p);
}

class _Mile implements _Valuer {
  const _Mile();
  String of(UnitsLocalization l, Form p) => l.atomMile(p);
}

class _NauticalMile implements _Valuer {
  const _NauticalMile();
  String of(UnitsLocalization l, Form p) => l.atomNauticalMile(p);
}

class _LightYear implements _Valuer {
  const _LightYear();
  String of(UnitsLocalization l, Form p) => l.atomLightYear(p);
}

class _Hectare implements _Valuer {
  const _Hectare();
  String of(UnitsLocalization l, Form p) => l.atomHectare(p);
}

class _Are implements _Valuer {
  const _Are();
  String of(UnitsLocalization l, Form p) => l.atomAre(p);
}

class _Liter implements _Valuer {
  const _Liter();
  String of(UnitsLocalization l, Form p) => l.atomLiter(p);
}

class _Gallon implements _Valuer {
  const _Gallon();
  String of(UnitsLocalization l, Form p) => l.atomGallon(p);
}

class _Barrel implements _Valuer {
  const _Barrel();
  String of(UnitsLocalization l, Form p) => l.atomBarrel(p);
}

class _Gram implements _Valuer {
  const _Gram();
  String of(UnitsLocalization l, Form p) => l.atomGram(p);
}

class _Ton implements _Valuer {
  const _Ton();
  String of(UnitsLocalization l, Form p) => l.atomTon(p);
}

class _Pound implements _Valuer {
  const _Pound();
  String of(UnitsLocalization l, Form p) => l.atomPound(p);
}

class _Ounce implements _Valuer {
  const _Ounce();
  String of(UnitsLocalization l, Form p) => l.atomOunce(p);
}

class _Second implements _Valuer {
  const _Second();
  String of(UnitsLocalization l, Form p) => l.atomSecond(p);
}

class _Minute implements _Valuer {
  const _Minute();
  String of(UnitsLocalization l, Form p) => l.atomMinute(p);
}

class _Hour implements _Valuer {
  const _Hour();
  String of(UnitsLocalization l, Form p) => l.atomHour(p);
}

class _Day implements _Valuer {
  const _Day();
  String of(UnitsLocalization l, Form p) => l.atomDay(p);
}

class _Week implements _Valuer {
  const _Week();
  String of(UnitsLocalization l, Form p) => l.atomWeek(p);
}

class _Month implements _Valuer {
  const _Month();
  String of(UnitsLocalization l, Form p) => l.atomMonth(p);
}

class _Year implements _Valuer {
  const _Year();
  String of(UnitsLocalization l, Form p) => l.atomYear(p);
}

class _Century implements _Valuer {
  const _Century();
  String of(UnitsLocalization l, Form p) => l.atomCentury(p);
}

class _SecondAngle implements _Valuer {
  const _SecondAngle();
  String of(UnitsLocalization l, Form p) => l.atomSecondAngle(p);
}

class _MinuteAngle implements _Valuer {
  const _MinuteAngle();
  String of(UnitsLocalization l, Form p) => l.atomMinuteAngle(p);
}

class _Degree implements _Valuer {
  const _Degree();
  String of(UnitsLocalization l, Form p) => l.atomDegree(p);
}

class _Ampere implements _Valuer {
  const _Ampere();
  String of(UnitsLocalization l, Form p) => l.atomAmpere(p);
}

class _Electronvolt implements _Valuer {
  const _Electronvolt();
  String of(UnitsLocalization l, Form p) => l.atomElectronvolt(p);
}

class _Bel implements _Valuer {
  const _Bel();
  String of(UnitsLocalization l, Form p) => l.atomBel(p);
}

class _Kelvin implements _Valuer {
  const _Kelvin();
  String of(UnitsLocalization l, Form p) => l.atomKelvin(p);
}

class _Mole implements _Valuer {
  const _Mole();
  String of(UnitsLocalization l, Form p) => l.atomMole(p);
}

class _Candela implements _Valuer {
  const _Candela();
  String of(UnitsLocalization l, Form p) => l.atomCandela(p);
}

class _Percent implements _Valuer {
  const _Percent();
  String of(UnitsLocalization l, Form p) => l.atomPercent(p);
}

class _PerThousand implements _Valuer {
  const _PerThousand();
  String of(UnitsLocalization l, Form p) => l.atomPerThousand(p);
}

class _Bit implements _Valuer {
  const _Bit();
  String of(UnitsLocalization l, Form p) => l.atomBit(p);
}

class _Byte implements _Valuer {
  const _Byte();
  String of(UnitsLocalization l, Form p) => l.atomByte(p);
}

class _Character implements _Valuer {
  const _Character();
  String of(UnitsLocalization l, Form p) => l.atomCharacter(p);
}

class _Word implements _Valuer {
  const _Word();
  String of(UnitsLocalization l, Form p) => l.atomWord(p);
}

class _Radian implements _Valuer {
  const _Radian();
  String of(UnitsLocalization l, Form p) => l.atomRadian(p);
}

class _Steradian implements _Valuer {
  const _Steradian();
  String of(UnitsLocalization l, Form p) => l.atomSteradian(p);
}

class _Hertz implements _Valuer {
  const _Hertz();
  String of(UnitsLocalization l, Form p) => l.atomHertz(p);
}

class _Newton implements _Valuer {
  const _Newton();
  String of(UnitsLocalization l, Form p) => l.atomNewton(p);
}

class _Pascal implements _Valuer {
  const _Pascal();
  String of(UnitsLocalization l, Form p) => l.atomPascal(p);
}

class _Joule implements _Valuer {
  const _Joule();
  String of(UnitsLocalization l, Form p) => l.atomJoule(p);
}

class _Watt implements _Valuer {
  const _Watt();
  String of(UnitsLocalization l, Form p) => l.atomWatt(p);
}

class _Coulomb implements _Valuer {
  const _Coulomb();
  String of(UnitsLocalization l, Form p) => l.atomCoulomb(p);
}

class _Volt implements _Valuer {
  const _Volt();
  String of(UnitsLocalization l, Form p) => l.atomVolt(p);
}

class _Farad implements _Valuer {
  const _Farad();
  String of(UnitsLocalization l, Form p) => l.atomFarad(p);
}

class _Ohm implements _Valuer {
  const _Ohm();
  String of(UnitsLocalization l, Form p) => l.atomOhm(p);
}

class _Siemens implements _Valuer {
  const _Siemens();
  String of(UnitsLocalization l, Form p) => l.atomSiemens(p);
}

class _Weber implements _Valuer {
  const _Weber();
  String of(UnitsLocalization l, Form p) => l.atomWeber(p);
}

class _Tesla implements _Valuer {
  const _Tesla();
  String of(UnitsLocalization l, Form p) => l.atomTesla(p);
}

class _Henry implements _Valuer {
  const _Henry();
  String of(UnitsLocalization l, Form p) => l.atomHenry(p);
}

class _DegreeCelsius implements _Valuer {
  const _DegreeCelsius();
  String of(UnitsLocalization l, Form p) => l.atomDegreeCelsius(p);
}

class _Lumen implements _Valuer {
  const _Lumen();
  String of(UnitsLocalization l, Form p) => l.atomLumen(p);
}

class _Lux implements _Valuer {
  const _Lux();
  String of(UnitsLocalization l, Form p) => l.atomLux(p);
}

class _Becquerel implements _Valuer {
  const _Becquerel();
  String of(UnitsLocalization l, Form p) => l.atomBecquerel(p);
}

class _Gray implements _Valuer {
  const _Gray();
  String of(UnitsLocalization l, Form p) => l.atomGray(p);
}

class _Sievert implements _Valuer {
  const _Sievert();
  String of(UnitsLocalization l, Form p) => l.atomSievert(p);
}

class _Katal implements _Valuer {
  const _Katal();
  String of(UnitsLocalization l, Form p) => l.atomKatal(p);
}

class AtomV1 {
  static const noAtom = const AtomV1._('', const _NoAtom());

  static const meter = const AtomV1._(r'm', const _Meter());

  static const foot = const AtomV1._(r'ft', const _Foot());

  static const inch = const AtomV1._(r'in', const _Inch());

  static const yard = const AtomV1._(r'yd', const _Yard());

  static const mile = const AtomV1._(r'mi', const _Mile());

  static const nauticalMile = const AtomV1._(r'NM', const _NauticalMile());

  static const lightYear = const AtomV1._(r'LY', const _LightYear());

  static const hectare = const AtomV1._(r'ha', const _Hectare());

  static const are = const AtomV1._(r'a', const _Are());

  static const liter = const AtomV1._(r'L', const _Liter());

  static const gallon = const AtomV1._(r'gal', const _Gallon());

  static const barrel = const AtomV1._(r'bbl', const _Barrel());

  static const gram = const AtomV1._(r'g', const _Gram());

  static const ton = const AtomV1._(r't', const _Ton());

  static const pound = const AtomV1._(r'lbs', const _Pound());

  static const ounce = const AtomV1._(r'oz', const _Ounce());

  static const second = const AtomV1._(r's', const _Second());

  static const minute = const AtomV1._(r'min', const _Minute());

  static const hour = const AtomV1._(r'h', const _Hour());

  static const day = const AtomV1._(r'd', const _Day());

  static const week = const AtomV1._(r'week', const _Week());

  static const month = const AtomV1._(r'month', const _Month());

  static const year = const AtomV1._(r'yr', const _Year());

  static const century = const AtomV1._(r'century', const _Century());

  static const secondAngle = const AtomV1._("'" "'", const _SecondAngle());

  static const minuteAngle = const AtomV1._("'", const _MinuteAngle());

  static const degree = const AtomV1._(r'°', const _Degree());

  static const ampere = const AtomV1._(r'A', const _Ampere());

  static const electronvolt = const AtomV1._(r'eV', const _Electronvolt());

  static const bel = const AtomV1._(r'B', const _Bel());

  static const kelvin = const AtomV1._(r'K', const _Kelvin());

  static const mole = const AtomV1._(r'mol', const _Mole());

  static const candela = const AtomV1._(r'cd', const _Candela());

  static const percent = const AtomV1._(r'%', const _Percent());

  static const perThousand = const AtomV1._(r'‰', const _PerThousand());

  static const bit = const AtomV1._(r'b', const _Bit());

  static const byte = const AtomV1._(r'B', const _Byte());

  static const character = const AtomV1._(r'character', const _Character());

  static const word = const AtomV1._(r'word', const _Word());

  static const radian = const AtomV1._(r'rad', const _Radian());

  static const steradian = const AtomV1._(r'sr', const _Steradian());

  static const hertz = const AtomV1._(r'Hz', const _Hertz());

  static const newton = const AtomV1._(r'N', const _Newton());

  static const pascal = const AtomV1._(r'Pa', const _Pascal());

  static const joule = const AtomV1._(r'J', const _Joule());

  static const watt = const AtomV1._(r'W', const _Watt());

  static const coulomb = const AtomV1._(r'C', const _Coulomb());

  static const volt = const AtomV1._(r'V', const _Volt());

  static const farad = const AtomV1._(r'F', const _Farad());

  static const ohm = const AtomV1._(r'Ω', const _Ohm());

  static const siemens = const AtomV1._(r'S', const _Siemens());

  static const weber = const AtomV1._(r'Wb', const _Weber());

  static const tesla = const AtomV1._(r'T', const _Tesla());

  static const henry = const AtomV1._(r'H', const _Henry());

  static const degreeCelsius = const AtomV1._(r'°C', const _DegreeCelsius());

  static const lumen = const AtomV1._(r'lm', const _Lumen());

  static const lux = const AtomV1._(r'lx', const _Lux());

  static const becquerel = const AtomV1._(r'Bq', const _Becquerel());

  static const gray = const AtomV1._(r'Gy', const _Gray());

  static const sievert = const AtomV1._(r'Sv', const _Sievert());

  static const katal = const AtomV1._(r'kat', const _Katal());

  final String symbol;
  final _Valuer _v;
  const AtomV1._(this.symbol, this._v);
  String l10n(UnitsLocalization l10n, Form form) =>
      l10n == null ? symbol : _v.of(l10n, form) ?? symbol;
}
